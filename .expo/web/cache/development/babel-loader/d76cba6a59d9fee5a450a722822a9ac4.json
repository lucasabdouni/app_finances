{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lucas/Documents/Projetos/Expo/meuappcomexpo/src/screens/Dashboard/index.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { HighlightCard } from \"../../components/HighlightCard\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useTheme } from 'styled-components';\nimport { TransactionCard } from \"../../components/TransactionCard\";\nimport { Container, Header, Photo, User, UserGreeting, UserInfo, UserName, UserWrapper, Icon, HighlightCards, Transactions, Title, TransactionsList, LogoutButton, LoadContainer } from \"./styles\";\nexport function Dashboard() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      transactions = _useState4[0],\n      setTransactions = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      highlightData = _useState6[0],\n      setHighlightData = _useState6[1];\n\n  var theme = useTheme();\n\n  function getLastTransactionDate(collection, type) {\n    var lastTransaction = new Date(Math.max.apply(Math, collection.filter(function (transaction) {\n      return transaction.type === type;\n    }).map(function (transaction) {\n      return new Date(transaction.date).getTime();\n    })));\n    return lastTransaction.getDate() + \" de \" + lastTransaction.toLocaleString('pt-BR', {\n      month: 'long'\n    });\n  }\n\n  function loadTransactions() {\n    var dataKey, response, transactions, entriesTotal, expensiveTotal, transactionsFormatted, lastTransactionEntries, lastTransactionExpensives, totalInterval, total;\n    return _regeneratorRuntime.async(function loadTransactions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataKey = '@gofinances:transactions';\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(dataKey));\n\n          case 3:\n            response = _context.sent;\n            transactions = response ? JSON.parse(response) : [];\n            entriesTotal = 0;\n            expensiveTotal = 0;\n            transactionsFormatted = transactions.map(function (item) {\n              if (item.type === 'positive') {\n                entriesTotal += Number(item.amount);\n              } else {\n                expensiveTotal -= Number(item.amount);\n              }\n\n              var amount = Number(item.amount).toLocaleString('pt-BR', {\n                style: 'currency',\n                currency: 'BRL'\n              });\n              var date = Intl.DateTimeFormat('pt-BR', {\n                day: '2-digit',\n                month: '2-digit',\n                year: '2-digit'\n              }).format(new Date(item.date));\n              return {\n                id: item.id,\n                name: item.name,\n                amount: amount,\n                type: item.type,\n                category: item.category,\n                date: date\n              };\n            });\n            setTransactions(transactionsFormatted);\n            lastTransactionEntries = getLastTransactionDate(transactions, 'positive');\n            lastTransactionExpensives = getLastTransactionDate(transactions, 'negative');\n            totalInterval = \"01 a \" + lastTransactionExpensives;\n            total = entriesTotal - expensiveTotal;\n            setHighlightData({\n              entries: {\n                amount: entriesTotal.toLocaleString('pt-BR', {\n                  style: 'currency',\n                  currency: 'BRL'\n                }),\n                lastTransaction: \"\\xDAltima entrada dia \" + lastTransactionEntries\n              },\n              expensives: {\n                amount: expensiveTotal.toLocaleString('pt-BR', {\n                  style: 'currency',\n                  currency: 'BRL'\n                }),\n                lastTransaction: \"\\xDAltima entrada dia \" + lastTransactionExpensives\n              },\n              total: {\n                amount: total.toLocaleString('pt-BR', {\n                  style: 'currency',\n                  currency: 'BRL'\n                }),\n                lastTransaction: totalInterval\n              }\n            });\n            setIsLoading(false);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadTransactions();\n  }, []);\n  useFocusEffect(useCallback(function () {\n    loadTransactions();\n  }, []));\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(LoadContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    color: theme.colors.primary,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, React.createElement(UserWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, React.createElement(UserInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, React.createElement(Photo, {\n    source: {\n      uri: 'https://avatars.githubusercontent.com/u/67294018?v=4'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }), React.createElement(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, React.createElement(UserGreeting, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  }, \"Ol\\xE1, \"), React.createElement(UserName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, \"Lucas\"))), React.createElement(LogoutButton, {\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    name: \"power\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  })))), React.createElement(HighlightCards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, React.createElement(HighlightCard, {\n    title: \"Entradas\",\n    amount: highlightData.entries.amount,\n    lastTransaction: highlightData.entries.lastTransaction,\n    type: \"up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), React.createElement(HighlightCard, {\n    title: \"Sa\\xEDdas\",\n    amount: highlightData.expensives.amount,\n    lastTransaction: highlightData.expensives.lastTransaction,\n    type: \"down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }), React.createElement(HighlightCard, {\n    title: \"Total\",\n    amount: highlightData.total.amount,\n    lastTransaction: highlightData.total.lastTransaction,\n    type: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), React.createElement(Transactions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, \"Listagem\"), React.createElement(TransactionsList, {\n    data: transactions,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TransactionCard, {\n        data: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 41\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/lucas/Documents/Projetos/Expo/meuappcomexpo/src/screens/Dashboard/index.tsx"],"names":["React","useCallback","useEffect","useState","HighlightCard","AsyncStorage","useFocusEffect","useTheme","TransactionCard","Container","Header","Photo","User","UserGreeting","UserInfo","UserName","UserWrapper","Icon","HighlightCards","Transactions","Title","TransactionsList","LogoutButton","LoadContainer","Dashboard","isLoading","setIsLoading","transactions","setTransactions","highlightData","setHighlightData","theme","getLastTransactionDate","collection","type","lastTransaction","Date","Math","max","apply","filter","transaction","map","date","getTime","getDate","toLocaleString","month","loadTransactions","dataKey","getItem","response","JSON","parse","entriesTotal","expensiveTotal","transactionsFormatted","item","Number","amount","style","currency","Intl","DateTimeFormat","day","year","format","id","name","category","lastTransactionEntries","lastTransactionExpensives","totalInterval","total","entries","expensives","colors","primary","uri"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport { HighlightCard } from '../../components/HighlightCard';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { useFocusEffect } from '@react-navigation/native';\nimport { useTheme } from 'styled-components';\n\nimport {\n  TransactionCard,\n  TransactionCardProps,\n} from '../../components/TransactionCard';\n\nimport {\n  Container,\n  Header,\n  Photo,\n  User,\n  UserGreeting,\n  UserInfo,\n  UserName,\n  UserWrapper,\n  Icon,\n  HighlightCards,\n  Transactions,\n  Title,\n  TransactionsList,\n  LogoutButton,\n  LoadContainer,\n} from './styles';\n\nexport interface DateListProps extends TransactionCardProps {\n  id: string;\n}\n\ninterface highlightProps {\n  amount: string;\n  lastTransaction: string;\n}\n\ninterface highlightData {\n  entries: highlightProps;\n  expensives: highlightProps;\n  total: highlightProps;\n}\n\nexport function Dashboard() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [transactions, setTransactions] = useState<DateListProps[]>([]);\n  const [highlightData, setHighlightData] = useState<highlightData>(\n    {} as highlightData\n  );\n\n  const theme = useTheme();\n\n  function getLastTransactionDate(\n    collection: DateListProps[],\n    type: 'positive' | 'negative'\n  ) {\n    const lastTransaction = new Date(\n      Math.max.apply(\n        Math,\n        collection\n          .filter((transaction) => transaction.type === type)\n          .map((transaction) => new Date(transaction.date).getTime())\n      )\n    );\n    return `${lastTransaction.getDate()} de ${lastTransaction.toLocaleString(\n      'pt-BR',\n      { month: 'long' }\n    )}`;\n  }\n\n  async function loadTransactions() {\n    const dataKey = '@gofinances:transactions';\n    const response = await AsyncStorage.getItem(dataKey);\n    const transactions = response ? JSON.parse(response) : [];\n\n    let entriesTotal = 0;\n    let expensiveTotal = 0;\n\n    const transactionsFormatted: DateListProps[] = transactions.map(\n      (item: DateListProps) => {\n        if (item.type === 'positive') {\n          entriesTotal += Number(item.amount);\n        } else {\n          expensiveTotal -= Number(item.amount);\n        }\n\n        const amount = Number(item.amount).toLocaleString('pt-BR', {\n          style: 'currency',\n          currency: 'BRL',\n        });\n\n        const date = Intl.DateTimeFormat('pt-BR', {\n          day: '2-digit',\n          month: '2-digit',\n          year: '2-digit',\n        }).format(new Date(item.date));\n\n        return {\n          id: item.id,\n          name: item.name,\n          amount,\n          type: item.type,\n          category: item.category,\n          date,\n        };\n      }\n    );\n\n    setTransactions(transactionsFormatted);\n\n    const lastTransactionEntries = getLastTransactionDate(\n      transactions,\n      'positive'\n    );\n    const lastTransactionExpensives = getLastTransactionDate(\n      transactions,\n      'negative'\n    );\n\n    const totalInterval = `01 a ${lastTransactionExpensives}`;\n\n    const total = entriesTotal - expensiveTotal;\n\n    setHighlightData({\n      entries: {\n        amount: entriesTotal.toLocaleString('pt-BR', {\n          style: 'currency',\n          currency: 'BRL',\n        }),\n        lastTransaction: `Última entrada dia ${lastTransactionEntries}`,\n      },\n      expensives: {\n        amount: expensiveTotal.toLocaleString('pt-BR', {\n          style: 'currency',\n          currency: 'BRL',\n        }),\n        lastTransaction: `Última entrada dia ${lastTransactionExpensives}`,\n      },\n      total: {\n        amount: total.toLocaleString('pt-BR', {\n          style: 'currency',\n          currency: 'BRL',\n        }),\n        lastTransaction: totalInterval,\n      },\n    });\n\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    loadTransactions();\n  }, []);\n\n  useFocusEffect(\n    useCallback(() => {\n      loadTransactions();\n    }, [])\n  );\n\n  return (\n    <Container>\n      {isLoading ? (\n        <LoadContainer>\n          <ActivityIndicator color={theme.colors.primary} size=\"large\" />\n        </LoadContainer>\n      ) : (\n        <>\n          <Header>\n            <UserWrapper>\n              <UserInfo>\n                <Photo\n                  source={{\n                    uri: 'https://avatars.githubusercontent.com/u/67294018?v=4',\n                  }}\n                />\n                <User>\n                  <UserGreeting>Olá, </UserGreeting>\n                  <UserName>Lucas</UserName>\n                </User>\n              </UserInfo>\n\n              <LogoutButton onPress={() => {}}>\n                <Icon name=\"power\" />\n              </LogoutButton>\n            </UserWrapper>\n          </Header>\n\n          <HighlightCards>\n            <HighlightCard\n              title=\"Entradas\"\n              amount={highlightData.entries.amount}\n              lastTransaction={highlightData.entries.lastTransaction}\n              type=\"up\"\n            />\n            <HighlightCard\n              title=\"Saídas\"\n              amount={highlightData.expensives.amount}\n              lastTransaction={highlightData.expensives.lastTransaction}\n              type=\"down\"\n            />\n            <HighlightCard\n              title=\"Total\"\n              amount={highlightData.total.amount}\n              lastTransaction={highlightData.total.lastTransaction}\n              type=\"total\"\n            />\n          </HighlightCards>\n\n          <Transactions>\n            <Title>Listagem</Title>\n\n            <TransactionsList\n              data={transactions}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item }) => <TransactionCard data={item} />}\n            />\n          </Transactions>\n        </>\n      )}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}