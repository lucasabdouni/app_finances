{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lucas/Documents/Projetos/Expo/meuappcomexpo/src/components/Form/TransactionTypeButton/index.tsx\";\nvar _excluded = [\"type\", \"title\", \"isActive\"];\nimport React from 'react';\nimport { Container, Icon, Title, Button } from \"./styles\";\nvar icons = {\n  up: 'arrow-up-circle',\n  down: 'arrow-down-circle'\n};\nexport function TransactionTypeButton(_ref) {\n  var type = _ref.type,\n      title = _ref.title,\n      isActive = _ref.isActive,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(Container, {\n    isActive: isActive,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Icon, {\n    name: icons[type],\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, title)));\n}","map":{"version":3,"sources":["/home/lucas/Documents/Projetos/Expo/meuappcomexpo/src/components/Form/TransactionTypeButton/index.tsx"],"names":["React","Container","Icon","Title","Button","icons","up","down","TransactionTypeButton","type","title","isActive","rest"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC;AAQA,IAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,iBADQ;AAEZC,EAAAA,IAAI,EAAE;AAFM,CAAd;AAKA,OAAO,SAASC,qBAAT,OAKG;AAAA,MAJRC,IAIQ,QAJRA,IAIQ;AAAA,MAHRC,KAGQ,QAHRA,KAGQ;AAAA,MAFRC,QAEQ,QAFRA,QAEQ;AAAA,MADLC,IACK;;AACR,SACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAED,QAArB;AAA+B,IAAA,IAAI,EAAEF,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,eAAYG,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEP,KAAK,CAACI,IAAD,CAAjB;AAAyB,IAAA,IAAI,EAAEA,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,KAAR,CAFF,CADF,CADF;AAQD","sourcesContent":["import React from 'react';\nimport { RectButtonProps } from 'react-native-gesture-handler';\nimport { Container, Icon, Title, Button } from './styles';\n\ninterface Props extends RectButtonProps {\n  type: 'up' | 'down';\n  title: string;\n  isActive: boolean;\n}\n\nconst icons = {\n  up: 'arrow-up-circle',\n  down: 'arrow-down-circle',\n};\n\nexport function TransactionTypeButton({\n  type,\n  title,\n  isActive,\n  ...rest\n}: Props) {\n  return (\n    <Container isActive={isActive} type={type}>\n      <Button {...rest}>\n        <Icon name={icons[type]} type={type} />\n        <Title>{title}</Title>\n      </Button>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}